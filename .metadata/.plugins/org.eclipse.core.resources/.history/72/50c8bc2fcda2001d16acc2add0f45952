package com.lib.managment.service.impl;

import java.util.Arrays;
import java.util.List;

import org.modelmapper.ModelMapper;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.lib.managment.dtos.CategoryDto;
import com.lib.managment.models.Books;
import com.lib.managment.models.Category;
import com.lib.managment.repository.CategoryRepository;
import com.lib.managment.service.CatgoryService;

@Service
public class CategoryServiceImpl implements CatgoryService {

	@Autowired
	private CategoryRepository categoryRepository;

	@Autowired
	private ModelMapper modelMapper;

	@Override
	public CategoryDto addCategory(CategoryDto CategoryDto) {
		Category category = modelMapper.map(CategoryDto, Category.class);
		return modelMapper.map(category, CategoryDto.getClass());
	}

	@Override
	public List<CategoryDto> getCategories() {
		List<Category> categories = categoryRepository.findAll();
		return Arrays.asList(modelMapper.map(categories, CategoryDto[].class));
	}

	@Override
	public CategoryDto getBookById(Integer bid) {
		Category category = categoryRepository.findById(bid)
				.orElseThrow(() -> new RuntimeException("no book found with id " + bid));
		return modelMapper.map(category, CategoryDto.class);
	}

	@Override
	public void deleteBook(Integer bookId) {
		Books books = categoryRepository.findById(bookId)
				.orElseThrow(() -> new RuntimeException("no book found with id " + bookId));
		categoryRepository.delete(books);

	}

}
